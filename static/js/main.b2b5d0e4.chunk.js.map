{"version":3,"sources":["tools/em.js","tools/formula.js","App.js","reportWebVitals.js","index.js"],"names":["multiplicative","em","Number","parseInt","formula","atk","cr","cd","ele","mod","reaction","reactionMultiplier","App","React","useState","final","setFinal","attack","setAttack","critRate","setCritRate","critDmg","setCritDmg","eleBonusDmg","setEleBonusDmg","modifier","setModifier","logs","updateLog","description","setDescription","eleMastery","setEleMastery","setReaction","useEffect","toFixed","pushLog","reactionString","entry","desc","metric","concat","className","for","id","placeholder","value","onChange","event","target","class","checked","type","name","disabled","onKeyPress","keyCode","which","preventDefault","onClick","x","alert","style","height","backgroundColor","width","map","log","JSON","stringify","renderLog","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b2b5d0e4.chunk.js","sourcesContent":["function multiplicative(em) {\r\n    em = em === '' ? 0 : Number.parseInt(em) //parseInt() returns NULL if value is '',\r\n    const x = (278 * em) / (em + 1400)       //whereas JS receives NULL as 0 in arithmetics.\r\n    // alert(`EM: ${em}, calc: ${x}`)\r\n    return x / 100;\r\n}\r\n\r\n// function additive(em) {\r\n//     return 0;\r\n// }\r\n\r\n// console.log(multiplicative(307));\r\n\r\nexport default multiplicative;","import multiplicative from './em';\r\n\r\nfunction formula(atk, em, cr, cd, ele, mod, reaction = 0) { //Multiplicative (Vape/Melt) reactions only.\r\n    cr /= 100;\r\n    cd /= 100;\r\n    ele = 1 + (ele / 100);\r\n    mod === 0 ? mod++ : mod /= 100;\r\n    em = reaction === 0 ? 1 : 1 + multiplicative(em);\r\n\r\n    var reactionMultiplier = reaction === 0 ? 1 : 1 + (1 / reaction);\r\n    return (atk * (1 + cr * cd)) * ele * mod * em * reactionMultiplier;\r\n    // return em;\r\n}\r\n\r\nexport default formula;","import './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport React from 'react';\r\nimport formula from './tools/formula';\r\nimport { Button } from 'react-bootstrap';\r\nimport multiplicative from './tools/em';\r\n\r\nfunction App() {\r\n\r\n  //State definitions\r\n  var [final, setFinal] = React.useState(0);\r\n  var [attack, setAttack] = React.useState(1000);\r\n  var [critRate, setCritRate] = React.useState(50);\r\n  var [critDmg, setCritDmg] = React.useState(100);\r\n  var [eleBonusDmg, setEleBonusDmg] = React.useState(0);\r\n  var [modifier, setModifier] = React.useState(100);\r\n  var [logs, updateLog] = React.useState([]);\r\n  var [description, setDescription] = React.useState(\"\");\r\n  var [eleMastery, setEleMastery] = React.useState(0);\r\n  var [reaction, setReaction] = React.useState(0);\r\n  //var [isNoblesse, togglenNoblesse] = React.useState(0);\r\n\r\n  //Final Calc Refresh\r\n  const finalCalc = () => {\r\n    const final = formula(attack, eleMastery, critRate, critDmg, eleBonusDmg, modifier, reaction).toFixed(1);\r\n    setFinal(final);\r\n  } //Event listener\r\n  React.useEffect(finalCalc, [critRate, final, critDmg, eleBonusDmg, attack, eleMastery, reaction]);\r\n\r\n\r\n  //onChange handlers\r\n  const handleAttackChange = (event) => {\r\n    setAttack(event.target.value);\r\n  };\r\n  const handleCritRateChange = (event) => {\r\n    setCritRate(event.target.value);\r\n  }\r\n  const handleCritDamageChange = (event) => {\r\n    setCritDmg(event.target.value);\r\n  }\r\n  const handleElementalBonusDamageChange = (event) => {\r\n    setEleBonusDmg(event.target.value);\r\n  }\r\n  const handleModifierChange = (event) => {\r\n    setModifier(event.target.value);\r\n  }\r\n  const handleDescriptionChange = (event) => {\r\n    setDescription(event.target.value);\r\n  }\r\n  const handleEleMasteryChange = (event) => {\r\n    setEleMastery(event.target.value);\r\n  }\r\n  const handleNoReaction = (event) => {\r\n    setReaction(0);\r\n  }\r\n  const handleReactionFull = (event) => {\r\n    setReaction(1);\r\n  }\r\n  const handleReactionReverse = (event) => {\r\n    setReaction(2);\r\n  }\r\n\r\n  const handleDescriptionInputKeyPress = (event) => {\r\n    var code = event.keyCode || event.which;\r\n    if (code === 13) {\r\n      event.preventDefault();\r\n      pushLog();\r\n    }\r\n  }\r\n\r\n  const pushLog = () => {\r\n    var reactionString = \"No reaction\"\r\n    if (reaction === 1) {\r\n      reactionString = \"Full Vaporize/Melt\"\r\n    } else if (reaction === 2) {\r\n      reactionString = \"Reverse Vaporize/Melt\"\r\n    }\r\n    const entry = {\r\n      final: final,\r\n      desc: description === \"\" ? \"No description\" : description,\r\n      metric: `Attack: ${attack}, EM: ${eleMastery}, Reaction: ${reactionString}, Crit%: ${critRate}, CritDmg%: ${critDmg}, Elem%:${critDmg}, Mod: ${modifier}`\r\n    }\r\n    updateLog(logs.concat(entry))\r\n    setDescription(\"\");\r\n  }\r\n  const clearLog = () => {\r\n    updateLog([]);\r\n  }\r\n  const renderLog = (log) => {\r\n    return (\r\n      <code>{JSON.stringify(log)}<br /></code>\r\n    );\r\n  }\r\n  const renderLogLines = () => {\r\n    return logs.map((log) => renderLog(log))\r\n  }\r\n  const debug = () => {\r\n    const x = multiplicative(370)\r\n    alert(x)\r\n  }\r\n\r\n  return (\r\n    <div className=\"justify-content-center align-items-center min-vh-100 bg-light d-flex flex-column\">\r\n      <div className=\"py-4 min-vw-100 text-center text-light bg-dark\">\r\n        <h1 className=\"display-4\">Genshin Impact: Simple Average Calculator</h1>\r\n      </div>\r\n      <div className=\"d-flex flex-column\">\r\n        <div className=\"p-2 d-flex justify-content-center\">\r\n          {/* Input */}\r\n          <form className=\"p-4\">\r\n            <div className=\"form-group\">\r\n              <label for=\"attackInput\" className=\"font-weight-bold\">Attack</label>\r\n              <input className=\"form-control\" id=\"attackInput\" placeholder=\"Input total Attack\" value={attack} onChange={handleAttackChange} />\r\n              <small className=\"form-text text-muted\" id=\"attackInput\">Your total attack, which is displayed as Base Atk + Atk Bonus at the details screen.</small>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label for=\"emInput\" className=\"font-weight-bold\">EM</label>\r\n              <input className=\"form-control\" id=\"emInput\" placeholder=\"Input elemental mastery\" value={eleMastery} onChange={handleEleMasteryChange} />\r\n              <small className=\"form-text text-muted\" id=\"emInput\">Elemental mastery</small>\r\n              <div class=\"form-check\">\r\n                <input onChange={handleNoReaction} checked={reaction === 0} class=\"form-check-input\" type=\"radio\" name=\"reactionRadio\" id=\"noReaction\" />\r\n                <label class=\"form-check-label\" for=\"noReaction\">\r\n                  No reaction\r\n                </label>\r\n              </div>\r\n              <div className=\"d-flex\">\r\n                <div class=\"form-check mr-2\">\r\n                  <input onChange={handleReactionFull} checked={reaction === 1} class=\"form-check-input\" type=\"radio\" name=\"reactionRadio\" id=\"reactionFull\" />\r\n                  <label class=\"form-check-label\" for=\"reactionFull\">\r\n                    Vaporize/Melt (2x)\r\n                </label>\r\n                </div>\r\n                <div class=\"form-check\">\r\n                  <input onChange={handleReactionReverse} checked={reaction === 2} class=\"form-check-input\" type=\"radio\" name=\"reactionRadio\" id=\"reactionReverse\" />\r\n                  <label class=\"form-check-label\" for=\"reactionReverse\">\r\n                    Reverse Vaporize/Melt (1.5x)\r\n                </label>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label for=\"critInput\" className=\"font-weight-bold\">Crit%</label>\r\n              <input className=\"form-control\" id=\"critInput\" placeholder=\"Input crit rate\" value={critRate} onChange={handleCritRateChange} />\r\n              <small className=\"form-text text-muted\" id=\"critInput\">Critical rate percentage.</small>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label for=\"critDmgInput\" className=\"font-weight-bold\">CritDmg%</label>\r\n              <input className=\"form-control\" id=\"critDmgInput\" placeholder=\"Input crit damage\" value={critDmg} onChange={handleCritDamageChange} />\r\n              <small className=\"form-text text-muted\" id=\"critDmgInput\">Critical damage percentage.</small>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label for=\"eleInput\" className=\"font-weight-bold\">Ele%</label>\r\n              <input className=\"form-control\" id=\"eleInput\" placeholder=\"Input elemental bonus damage\" value={eleBonusDmg} onChange={handleElementalBonusDamageChange} />\r\n              <small className=\"form-text text-muted\" id=\"eleInput\">Elemental damage bonus (Electro, Pyro, etc.).</small>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label for=\"modifierInput\" className=\"font-weight-bold\">Skill Modifier (WiP)</label>\r\n              <input disabled className=\"form-control\" id=\"modifierInput\" placeholder=\"Input skill modifier\" value={modifier} onChange={handleModifierChange} />\r\n              <small className=\"form-text text-muted\" id=\"eleInput\">Your skill modifier.</small>\r\n            </div>\r\n\r\n          </form>\r\n          <div className=\"px-4 py-2 d-flex justify-content-center flex-column w-50\">\r\n            <div className=\"mb-5 text-center\">\r\n              <h5 className=\"\">Average final damage:</h5>\r\n              <h3 className=\"text-dark display-3\">{final}</h3>\r\n              {/* <h3 className=\"text-dark display-3\">{reaction}</h3> */}\r\n            </div>\r\n            <form>\r\n              <div className=\"form-group text-center\">\r\n                <input id=\"descriptionInput\" className=\"form-control\" placeholder=\"Log description/alias\" value={description} onChange={handleDescriptionChange} onKeyPress={handleDescriptionInputKeyPress}></input>\r\n                <small className=\"text-dark\">Save current values with description/alias attached to the log.</small>\r\n              </div>\r\n              <div className=\"form-group d-flex justify-content-center\">\r\n                <button id=\"pushBtn\" type=\"button\" className=\"btn btn-dark d-block mx-2\" onClick={pushLog}>Add to logs</button>\r\n                <button id=\"clearBtn\" type=\"button\" className=\"btn btn-dark d-block mx-2\" onClick={clearLog}>Clear log</button>\r\n                <button id=\"debug\" type=\"button\" className=\"btn btn-danger d-block mx-2\" onClick={debug}>Debug</button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n        <div className=\"pb-3 d-flex justify-content-center align-items-center flex-column\">\r\n          <h5 className=\"d-flex align-self-start\">Logs:</h5>\r\n          <div className=\"p-2 border overflow-auto\" style={{ height: \"25vh\", backgroundColor: \"#efefef\", width: \"80vw\" }}>\r\n            <pre>{renderLogLines()}</pre>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <small className=\"pb-2\">Features to be added: Tidier logs, elemental mastery and reactions, Noblesse/Gambler, Mobile Polish</small>\r\n      <small>Last push: This section.</small>\r\n    </div >\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n// To Do:\r\n// Finish the form","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}